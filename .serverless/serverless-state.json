{
  "service": {
    "service": "serverless-prism-version-v1",
    "serviceObject": {
      "name": "serverless-prism-version-v1"
    },
    "provider": {
      "stage": "dev",
      "region": "cn-north-1",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)]+?)}",
      "name": "aws",
      "runtime": "nodejs8.10",
      "profile": "default",
      "endpointType": "regional",
      "apiKeys": [
        "myKey"
      ],
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:DescribeTable",
            "dynamodb:Query",
            "dynamodb:Scan",
            "dynamodb:GetItem",
            "dynamodb:PutItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem"
          ],
          "Resource": "arn:aws-cn:dynamodb:cn-north-1:519581462634:table/*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "s3:PutObject"
          ],
          "Resource": "arn:aws-cn:s3:::prismusers/*"
        }
      ],
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "HelloLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-prism-version-v1-dev-hello"
            }
          },
          "UserModuleLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-prism-version-v1-dev-userModule"
            }
          },
          "UploadModuleLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-prism-version-v1-dev-uploadModule"
            }
          },
          "InsertDataModuleLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-prism-version-v1-dev-insertDataModule"
            }
          },
          "MydataLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-prism-version-v1-dev-mydata"
            }
          },
          "AuthorizeLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-prism-version-v1-dev-authorize"
            }
          },
          "UserETLJobLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-prism-version-v1-dev-userETLJob"
            }
          },
          "HealthETLJobLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-prism-version-v1-dev-healthETLJob"
            }
          },
          "DevicesETLJobLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-prism-version-v1-dev-devicesETLJob"
            }
          },
          "FetchProgramsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-prism-version-v1-dev-fetchPrograms"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "serverless-prism-version-v1",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-prism-version-v1-dev-hello:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-prism-version-v1-dev-userModule:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-prism-version-v1-dev-uploadModule:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-prism-version-v1-dev-insertDataModule:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-prism-version-v1-dev-mydata:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-prism-version-v1-dev-authorize:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-prism-version-v1-dev-userETLJob:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-prism-version-v1-dev-healthETLJob:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-prism-version-v1-dev-devicesETLJob:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-prism-version-v1-dev-fetchPrograms:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-prism-version-v1-dev-hello:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-prism-version-v1-dev-userModule:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-prism-version-v1-dev-uploadModule:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-prism-version-v1-dev-insertDataModule:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-prism-version-v1-dev-mydata:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-prism-version-v1-dev-authorize:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-prism-version-v1-dev-userETLJob:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-prism-version-v1-dev-healthETLJob:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-prism-version-v1-dev-devicesETLJob:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-prism-version-v1-dev-fetchPrograms:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][1]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "serverless-prism-version-v1",
                    "dev",
                    "cn-north-1",
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "HelloLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-prism-version-v1/dev/1553755508117-2019-03-28T06:45:08.117Z/serverless-prism-version-v1.zip"
              },
              "FunctionName": "serverless-prism-version-v1-dev-hello",
              "Handler": "handler.hello",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6
            },
            "DependsOn": [
              "HelloLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "HelloLambdaVersion7wcr34yX1SUAQDZlmEscHt80S4mFvpwZtMczxiOAIF4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HelloLambdaFunction"
              },
              "CodeSha256": "YFxSrzuuVcytMM40Dw+LRoJel5JDrhbSqSLNXTBfBkI="
            }
          },
          "UserModuleLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-prism-version-v1/dev/1553755508117-2019-03-28T06:45:08.117Z/serverless-prism-version-v1.zip"
              },
              "FunctionName": "serverless-prism-version-v1-dev-userModule",
              "Handler": "handler.fetchUser",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6
            },
            "DependsOn": [
              "UserModuleLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "UserModuleLambdaVersionAa28QxwIb3XVkc507qa4PIHGoq83qLF3zlf5KQL1DH0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UserModuleLambdaFunction"
              },
              "CodeSha256": "YFxSrzuuVcytMM40Dw+LRoJel5JDrhbSqSLNXTBfBkI="
            }
          },
          "UploadModuleLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-prism-version-v1/dev/1553755508117-2019-03-28T06:45:08.117Z/serverless-prism-version-v1.zip"
              },
              "FunctionName": "serverless-prism-version-v1-dev-uploadModule",
              "Handler": "userProfile.uploadFile",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6
            },
            "DependsOn": [
              "UploadModuleLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "UploadModuleLambdaVersione5nJ2G3KYnmg25cD6TWUOkPqcUPp4PgWynYfc4WLGHQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UploadModuleLambdaFunction"
              },
              "CodeSha256": "YFxSrzuuVcytMM40Dw+LRoJel5JDrhbSqSLNXTBfBkI="
            }
          },
          "InsertDataModuleLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-prism-version-v1/dev/1553755508117-2019-03-28T06:45:08.117Z/serverless-prism-version-v1.zip"
              },
              "FunctionName": "serverless-prism-version-v1-dev-insertDataModule",
              "Handler": "mydata.insertMyData",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6
            },
            "DependsOn": [
              "InsertDataModuleLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "InsertDataModuleLambdaVersionPxAgMhpntpB4L1oCNFjoZFqdMldSTCWtawrDkOcdqE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "InsertDataModuleLambdaFunction"
              },
              "CodeSha256": "YFxSrzuuVcytMM40Dw+LRoJel5JDrhbSqSLNXTBfBkI="
            }
          },
          "MydataLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-prism-version-v1/dev/1553755508117-2019-03-28T06:45:08.117Z/serverless-prism-version-v1.zip"
              },
              "FunctionName": "serverless-prism-version-v1-dev-mydata",
              "Handler": "mydata.fetchMyData",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6
            },
            "DependsOn": [
              "MydataLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "MydataLambdaVersionG7RmDLau4FXfoEKW74MEXVKiYIqqhKMjvmD0fxNBA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "MydataLambdaFunction"
              },
              "CodeSha256": "YFxSrzuuVcytMM40Dw+LRoJel5JDrhbSqSLNXTBfBkI="
            }
          },
          "AuthorizeLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-prism-version-v1/dev/1553755508117-2019-03-28T06:45:08.117Z/serverless-prism-version-v1.zip"
              },
              "FunctionName": "serverless-prism-version-v1-dev-authorize",
              "Handler": "handler.authorize",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6
            },
            "DependsOn": [
              "AuthorizeLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AuthorizeLambdaVersion6fneWyYWdtIhs2xj88dHPBSmWqvsCdYAbyJCqiYGg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AuthorizeLambdaFunction"
              },
              "CodeSha256": "YFxSrzuuVcytMM40Dw+LRoJel5JDrhbSqSLNXTBfBkI="
            }
          },
          "UserETLJobLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-prism-version-v1/dev/1553755508117-2019-03-28T06:45:08.117Z/serverless-prism-version-v1.zip"
              },
              "FunctionName": "serverless-prism-version-v1-dev-userETLJob",
              "Handler": "etljob.cronJob",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 45
            },
            "DependsOn": [
              "UserETLJobLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "UserETLJobLambdaVersionEHs61poShDTUVPoSRKjY58xQruTJQM7thxiYS5x1KA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UserETLJobLambdaFunction"
              },
              "CodeSha256": "YFxSrzuuVcytMM40Dw+LRoJel5JDrhbSqSLNXTBfBkI="
            }
          },
          "HealthETLJobLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-prism-version-v1/dev/1553755508117-2019-03-28T06:45:08.117Z/serverless-prism-version-v1.zip"
              },
              "FunctionName": "serverless-prism-version-v1-dev-healthETLJob",
              "Handler": "etljob.etlHealthData",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 45
            },
            "DependsOn": [
              "HealthETLJobLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "HealthETLJobLambdaVersionC8AYQeFKTLyBFLfQgQcXjDF2idYk2EFkFLIATwQVlug": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HealthETLJobLambdaFunction"
              },
              "CodeSha256": "YFxSrzuuVcytMM40Dw+LRoJel5JDrhbSqSLNXTBfBkI="
            }
          },
          "DevicesETLJobLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-prism-version-v1/dev/1553755508117-2019-03-28T06:45:08.117Z/serverless-prism-version-v1.zip"
              },
              "FunctionName": "serverless-prism-version-v1-dev-devicesETLJob",
              "Handler": "etljob.devicesETL",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 45
            },
            "DependsOn": [
              "DevicesETLJobLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "DevicesETLJobLambdaVersionxnQMKa29oPGfwb4gaq8lqELXsrgp6lznbWTS5FtjK4w": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DevicesETLJobLambdaFunction"
              },
              "CodeSha256": "YFxSrzuuVcytMM40Dw+LRoJel5JDrhbSqSLNXTBfBkI="
            }
          },
          "FetchProgramsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-prism-version-v1/dev/1553755508117-2019-03-28T06:45:08.117Z/serverless-prism-version-v1.zip"
              },
              "FunctionName": "serverless-prism-version-v1-dev-fetchPrograms",
              "Handler": "handler.fetchEvents",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6
            },
            "DependsOn": [
              "FetchProgramsLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "FetchProgramsLambdaVersion2fPrAFa3RBBT9hZwsMceHcirlxpKkbo7k0eKAVFInY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "FetchProgramsLambdaFunction"
              },
              "CodeSha256": "YFxSrzuuVcytMM40Dw+LRoJel5JDrhbSqSLNXTBfBkI="
            }
          },
          "UserETLJobEventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(15 10 * * ? *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "UserETLJobLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "userETLJobSchedule"
                }
              ]
            }
          },
          "UserETLJobLambdaPermissionEventsRuleSchedule1": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UserETLJobLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "events.",
                    "amazonaws.com"
                  ]
                ]
              },
              "SourceArn": {
                "Fn::GetAtt": [
                  "UserETLJobEventsRuleSchedule1",
                  "Arn"
                ]
              }
            }
          },
          "HealthETLJobEventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(15 10 * * ? *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "HealthETLJobLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "healthETLJobSchedule"
                }
              ]
            }
          },
          "HealthETLJobLambdaPermissionEventsRuleSchedule1": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HealthETLJobLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "events.",
                    "amazonaws.com"
                  ]
                ]
              },
              "SourceArn": {
                "Fn::GetAtt": [
                  "HealthETLJobEventsRuleSchedule1",
                  "Arn"
                ]
              }
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-serverless-prism-version-v1",
              "EndpointConfiguration": {
                "Types": [
                  "REGIONAL"
                ]
              }
            }
          },
          "ApiGatewayResourceHello": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "hello",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceGetuser": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "getuser",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUpload": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "upload",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceData": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "data",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFetchdata": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "fetchdata",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceGetevents": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "getevents",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodHelloPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceHello"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HelloLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodGetuserPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceGetuser"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": true,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UserModuleLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodUploadPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUpload"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": true,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UploadModuleLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodDataPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceData"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": true,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "InsertDataModuleLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodFetchdataPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFetchdata"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": true,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "MydataLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodGeteventsGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceGetevents"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": true,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "FetchProgramsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1553755509528": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodHelloPost",
              "ApiGatewayMethodGetuserPost",
              "ApiGatewayMethodUploadPost",
              "ApiGatewayMethodDataPost",
              "ApiGatewayMethodFetchdataPost",
              "ApiGatewayMethodGeteventsGet"
            ]
          },
          "ApiGatewayApiKey1": {
            "Type": "AWS::ApiGateway::ApiKey",
            "Properties": {
              "Enabled": true,
              "Name": "myKey",
              "StageKeys": [
                {
                  "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "StageName": "dev"
                }
              ]
            },
            "DependsOn": "ApiGatewayDeployment1553755509528"
          },
          "ApiGatewayUsagePlan": {
            "Type": "AWS::ApiGateway::UsagePlan",
            "DependsOn": "ApiGatewayDeployment1553755509528",
            "Properties": {
              "ApiStages": [
                {
                  "ApiId": {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "Stage": "dev"
                }
              ],
              "Description": "Usage plan for serverless-prism-version-v1 dev stage",
              "UsagePlanName": "serverless-prism-version-v1-dev"
            }
          },
          "ApiGatewayUsagePlanKey1": {
            "Type": "AWS::ApiGateway::UsagePlanKey",
            "Properties": {
              "KeyId": {
                "Ref": "ApiGatewayApiKey1"
              },
              "KeyType": "API_KEY",
              "UsagePlanId": {
                "Ref": "ApiGatewayUsagePlan"
              }
            }
          },
          "HelloLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HelloLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    "amazonaws.com"
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UserModuleLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UserModuleLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    "amazonaws.com"
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UploadModuleLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UploadModuleLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    "amazonaws.com"
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "InsertDataModuleLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "InsertDataModuleLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    "amazonaws.com"
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "MydataLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "MydataLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    "amazonaws.com"
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "FetchProgramsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "FetchProgramsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    "amazonaws.com"
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "HelloLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HelloLambdaVersion7wcr34yX1SUAQDZlmEscHt80S4mFvpwZtMczxiOAIF4"
            }
          },
          "UserModuleLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UserModuleLambdaVersionAa28QxwIb3XVkc507qa4PIHGoq83qLF3zlf5KQL1DH0"
            }
          },
          "UploadModuleLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UploadModuleLambdaVersione5nJ2G3KYnmg25cD6TWUOkPqcUPp4PgWynYfc4WLGHQ"
            }
          },
          "InsertDataModuleLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "InsertDataModuleLambdaVersionPxAgMhpntpB4L1oCNFjoZFqdMldSTCWtawrDkOcdqE"
            }
          },
          "MydataLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "MydataLambdaVersionG7RmDLau4FXfoEKW74MEXVKiYIqqhKMjvmD0fxNBA"
            }
          },
          "AuthorizeLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AuthorizeLambdaVersion6fneWyYWdtIhs2xj88dHPBSmWqvsCdYAbyJCqiYGg"
            }
          },
          "UserETLJobLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UserETLJobLambdaVersionEHs61poShDTUVPoSRKjY58xQruTJQM7thxiYS5x1KA"
            }
          },
          "HealthETLJobLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HealthETLJobLambdaVersionC8AYQeFKTLyBFLfQgQcXjDF2idYk2EFkFLIATwQVlug"
            }
          },
          "DevicesETLJobLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DevicesETLJobLambdaVersionxnQMKa29oPGfwb4gaq8lqELXsrgp6lznbWTS5FtjK4w"
            }
          },
          "FetchProgramsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "FetchProgramsLambdaVersion2fPrAFa3RBBT9hZwsMceHcirlxpKkbo7k0eKAVFInY"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.cn-north-1.",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-plugin-aws-cn-principal"
    ],
    "pluginsData": {},
    "functions": {
      "hello": {
        "handler": "handler.hello",
        "events": [
          {
            "http": {
              "path": "hello",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-prism-version-v1-dev-hello",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "userModule": {
        "handler": "handler.fetchUser",
        "events": [
          {
            "http": {
              "path": "getuser",
              "method": "post",
              "private": true,
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-prism-version-v1-dev-userModule",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "uploadModule": {
        "handler": "userProfile.uploadFile",
        "events": [
          {
            "http": {
              "path": "upload",
              "method": "post",
              "private": true,
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-prism-version-v1-dev-uploadModule",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "insertDataModule": {
        "handler": "mydata.insertMyData",
        "events": [
          {
            "http": {
              "path": "data",
              "method": "post",
              "private": true,
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-prism-version-v1-dev-insertDataModule",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "mydata": {
        "handler": "mydata.fetchMyData",
        "events": [
          {
            "http": {
              "path": "fetchdata",
              "method": "post",
              "private": true,
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-prism-version-v1-dev-mydata",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "authorize": {
        "handler": "handler.authorize",
        "events": [],
        "name": "serverless-prism-version-v1-dev-authorize",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "userETLJob": {
        "handler": "etljob.cronJob",
        "timeout": 45,
        "events": [
          {
            "schedule": {
              "rate": "cron(15 10 * * ? *)",
              "enabled": true
            }
          }
        ],
        "name": "serverless-prism-version-v1-dev-userETLJob",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "healthETLJob": {
        "handler": "etljob.etlHealthData",
        "timeout": 45,
        "events": [
          {
            "schedule": {
              "rate": "cron(15 10 * * ? *)",
              "enabled": true
            }
          }
        ],
        "name": "serverless-prism-version-v1-dev-healthETLJob",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "devicesETLJob": {
        "handler": "etljob.devicesETL",
        "timeout": 45,
        "events": [
          {
            "schedule": null,
            "rate": "cron(15 10 * * ? *)",
            "enabled": true
          }
        ],
        "name": "serverless-prism-version-v1-dev-devicesETLJob",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "fetchPrograms": {
        "handler": "handler.fetchEvents",
        "events": [
          {
            "http": {
              "path": "getevents",
              "method": "get",
              "private": true,
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-prism-version-v1-dev-fetchPrograms",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      }
    },
    "layers": {},
    "artifact": "D:\\prism workspace\\prism space\\prism-version-1.0\\.serverless\\serverless-prism-version-v1.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/serverless-prism-version-v1/dev/1553755508117-2019-03-28T06:45:08.117Z",
    "artifact": "serverless-prism-version-v1.zip"
  }
}